# 全局配置
global:
  imageRegistry: ghcr.io
  imagePullSecrets: []
  storageClass: "gp2"

# 应用配置
app:
  name: financial-system
  version: "1.0.0"
  environment: production

# 前端配置
frontend:
  enabled: true
  replicaCount: 3
  image:
    repository: ghcr.io/your-org/financial-system-frontend
    tag: "latest"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000
  
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  nodeSelector: {}
  tolerations: []
  affinity: {}

# 后端配置
backend:
  enabled: true
  replicaCount: 3
  image:
    repository: ghcr.io/your-org/financial-system-backend
    tag: "latest"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 15
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  env:
    NODE_ENV: production
    JWT_SECRET: ""
    CORS_ORIGIN: ""
  
  nodeSelector: {}
  tolerations: []
  affinity: {}

# 数据库配置
postgresql:
  enabled: true
  auth:
    postgresPassword: ""
    username: financial_user
    password: ""
    database: financial_db
  
  primary:
    persistence:
      enabled: true
      size: 20Gi
      storageClass: "gp2"
    
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "1Gi"
        cpu: "1000m"
  
  readReplicas:
    enabled: true
    replicaCount: 2
    persistence:
      enabled: true
      size: 20Gi
    
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "1Gi"
        cpu: "500m"

# Redis配置
redis:
  enabled: true
  auth:
    enabled: true
    password: ""
  
  master:
    persistence:
      enabled: true
      size: 8Gi
      storageClass: "gp2"
    
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "512Mi"
        cpu: "500m"
  
  replica:
    replicaCount: 2
    persistence:
      enabled: true
      size: 8Gi
    
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "512Mi"
        cpu: "250m"

# Ingress配置
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
  
  hosts:
    - host: financial-system.com
      paths:
        - path: /
          pathType: Prefix
          service: frontend
        - path: /api
          pathType: Prefix
          service: backend
  
  tls:
    - secretName: financial-system-tls
      hosts:
        - financial-system.com

# 监控配置
monitoring:
  enabled: true
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 30s
      scrapeTimeout: 10s
  
  grafana:
    enabled: true
    dashboards:
      enabled: true

# 安全配置
security:
  networkPolicy:
    enabled: true
  
  podSecurityPolicy:
    enabled: true
  
  rbac:
    enabled: true

# 备份配置
backup:
  enabled: true
  schedule: "0 2 * * *"
  retention: 30
  storage:
    size: 100Gi
    storageClass: "gp2"

# 日志配置
logging:
  enabled: true
  level: info
  fluentd:
    enabled: true
  
  elasticsearch:
    enabled: false
    host: ""
    port: 9200

# 配置映射
configMap:
  data:
    APP_NAME: "财务管理系统"
    APP_VERSION: "1.0.0"
    LOG_LEVEL: "info"
    RATE_LIMIT: "100"
    SESSION_TIMEOUT: "3600"

# 密钥配置
secrets:
  jwt:
    secretName: financial-jwt-secret
    key: JWT_SECRET
  
  database:
    secretName: financial-db-secret
    usernameKey: username
    passwordKey: password
  
  redis:
    secretName: financial-redis-secret
    passwordKey: password

# 服务账户
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod中断预算
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# 健康检查
healthcheck:
  liveness:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readiness:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# 环境特定配置
environments:
  development:
    replicaCount: 1
    autoscaling:
      enabled: false
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "200m"
  
  staging:
    replicaCount: 2
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 5
  
  production:
    replicaCount: 3
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 15